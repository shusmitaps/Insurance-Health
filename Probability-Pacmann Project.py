# -*- coding: utf-8 -*-
"""Pacmann - Probability2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1EpTi7rZK7SEpPcSeMDUcEgOHagTH4gK3

# Prepartion Code
"""

# Import library
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

"""# Import Database"""

# Import dan read Datasets
url='https://docs.google.com/spreadsheets/d/1eLghuayVmV2DkS6XWfVlJopZFXk4tPW1zOg9U5MAtCM/edit#gid=1867086280'
url= url.replace('/edit#gid=', '/export?format=csv&gid=')
df = pd.read_csv(url)
insuran=df.copy()
insuran.head()

"""# EDA"""

# Menampilkan informasi tiap kolom dari datasaet
insuran.info()

"""- Categorical variables : sex,smoker,region,children
- Numerical variables : age,bmi,charges. 
- Tidak ada missing values di insuran table

## Descriptive Statistic Analyst

1. Berapa rata rata umur pada data tersebut?
2. Berapa rata rata nilai BMI dari yang merokok?
3. Apakah variansi dari tagihan kesehatan perokok dan non perokok sama?
4. Apakah rata rata umur perempuan dan laki-laki yang merokok sama?
5. Mana yang lebih tinggi, rata rata tagihan kesehatan perokok atau non merokok?
"""

# Describe the data numerical
insuran.describe().transpose()

#get all Numerical datatype
(df[['age', 'bmi', 'children', 'charges']]
 .hist(figsize=(10, 6), bins=10, edgecolor='w', linewidth=1))
plt.show()

"""- Rata-rata usia yang membeli asuransi adalah 39,2 tahun dan usia maksimum adalah 64 tahun.
- Rata-rata BMI adalah 30,66, yang berada di luar rentang  **BMI normal (18,5 hingga 24,9)**, BMI maksimum adalah 53,13.
- Rata-rata biaya medis yang dibebankan ke asuransi kesehatan adalah 13.270, median adalah 9.382 dan maksimum adalah 63.770.
- Rata-rata jumlah anak yang dimiliki oleh pelanggan adalah 1. Namun lebih dari 500 orang tidak memiliki anak.
"""

# Describe the data categorical
insuran.describe(include='object')

#get all category datatype 
list_col=  insuran.select_dtypes(['object']).columns
fig1, axes1 =plt.subplots(1,3,figsize=(14, 5))
for i in range(len(list_col)):
    order = insuran[list_col[i]].value_counts(ascending=False).index # to display bar in ascending order
    ax = sns.countplot(x=list_col[i], data=insuran , order=order, ax=axes1[i], palette='viridis')
    ax.set(title=list_col[i].upper())

    # add annotations for percentage of each category
    total = float(len(insuran[list_col[i]]))
    for p in ax.patches:
        percentage = '{:.1f}%'.format(100 * p.get_height()/total)
        x = p.get_x() + p.get_width()/2 - 0.1
        y = p.get_y() + p.get_height() + 5
        ax.annotate(percentage, (x, y))

"""- Perbedaan jumlah jenis kelamin Customer tidak jauh berbeda dan terbanyak adalah male yaitu 676 orang. 
- Kemudian Frekuensi terbanyak adalah no smoker lebih dari 50% sebanyak 1064 orang. 
- Customer yang melakukan tagihan asuransi terbanyak berada bertempat tinggal di southeast.
"""

# Distribusi Usia
bins = [0, 20, 40, 60, 100] # interval atau rentang pada data numerik
labels = ['Di bawah 20', '20-39', '40-59', 'Di Atas 60']
fig1, axes1 =plt.subplots(figsize=(10, 5))
df['age_range'] = pd.cut(df['age'], bins=bins, labels=labels, include_lowest=True)
age_groups = df.groupby('age_range')['age'].count()
plt.bar(age_groups.index, age_groups.values)
for x, y in zip(age_groups.index, age_groups.values):
    axes1.annotate('{:.0f}'.format(y), (x, y), 
            ha='center', va='bottom') # set the alignment of the text
plt.title('Distribusi Usia')
plt.xlabel('Kategori Usia')
plt.ylabel('Jumlah Individu')
plt.show()

# Function to create barplots that count for each category.
def bar_count(plot, feature):
    total = len(feature) # length of the column
    for p in plot.patches:
        count = p.get_height()
        x = p.get_x() + p.get_width() / 2 - 0.05 # width of the plot
        y = p.get_y() + p.get_height()         # hieght of the plot
        plot.annotate('{:.0f}'.format(count), (x, y), size = 12)  # annotate count value
 
# smoker vs Sex
plt.figure(figsize=(11,5))
ax=sns.countplot(x='smoker',hue='sex',data=insuran,palette='rainbow')
bar_count(ax,insuran['sex'])
ax.set(title="Smoker vs Sex")

"""There is very little significant correlation between charges &age and charges and bmi."""

insuran.groupby([ 'smoker'])['age'].agg(['count','mean'])

insuran.groupby([ 'smoker', 'sex'])['age'].agg(['count','mean'])

"""- Usia rata-rata customer claim asuransi yang perokok adalah 38,5 tahun. 
- Rata-rata usia perokok pria adalah 38,4 dan rata-rata usia perokok wanita adalah 38,6
"""

# Group the dataset by 'smoker' and 'age_range' columns and count the number of individuals in each group
smoker_age = df.groupby(['smoker', 'age_range'])['age'].count().reset_index(name='count')

# Create a bar chart using seaborn
plt.figure(figsize=(12,6))
sns.barplot(x='age_range', y='count', hue='smoker', data=smoker_age, palette='rainbow')

# Add annotations to the plot
for p in plt.gca().patches:
    plt.gca().annotate(f"{p.get_height():.0f}", 
                xy=(p.get_x() + p.get_width() / 2, p.get_height()),
                xytext=(0, 3),  # 3 points vertical offset
                textcoords="offset points",
                ha='center', va='bottom', size=10)

plt.title('Smoker vs Age')
plt.xlabel('Age Range')
plt.ylabel('Number of Individuals')
plt.show()

insuran.groupby([ 'smoker'])['charges'].agg(['count','mean','max'])

"""Berdasarkan data di atas, biaya asuransi rata-rata perokok lebih tinggi dari yang bukan perokok, yaitu 32050,23 dan maksimumnya adalah 63770,4"""

insuran.groupby([ 'smoker', 'sex'])['bmi'].agg(['count','mean','max'])

insuran.loc[insuran['bmi'] > 25].groupby(['smoker'])['charges'].agg(['count', 'mean', 'max'])

insuran.loc[insuran['bmi'] <= 25].groupby(['smoker'])['charges'].agg(['count', 'mean', 'max'])

"""Ringkasan
- Usia rata-rata customer claim asuransi adalah 39,2 tahun dan usia maksimum adalah 64 tahun
- Usia rata-rata customer claim asuransi yang perokok adalah 38,5 tahun. 
- Rata-rata usia perokok pria adalah 38,4 dan rata-rata usia perokok wanita adalah 38,6
- BMI rata-rata adalah 30,66, yang berada di luar rentang **BMI normal (18,5 hingga 24,9)**. BMI maksimum adalah 53,13
- BMI rata-rata perokok adalah 30,7
- Biaya asuransi rata-rata perokok lebih tinggi dari yang bukan perokok, yaitu 32050,23 dan maksimumnya adalah 63770,4
- Biaya asuransi rata-rata dan maksimum perokok yang memiliki BMI > 25 lebih tinggi dibandingkan dengan biaya asuransi perokok yang memiliki BMI <= 25.

##  Variabel Diskrit Analyst

1. Gender mana yang memiliki tagihan paling tinggi?
2. Distribusi peluang tagihan di tiap-tiap region
3. Apakah setiap region memiliki proporsi data banyak orang yang sama?
4. Mana yang lebih tinggi proporsi perokok atau non perokok?
5. Berapa peluang seseorang tersebut adalah perempuan diketahui dia adalah perokok?
"""

insuran.groupby([ 'sex'])['charges'].agg(['count','mean','max'])

"""Secara umum Male yang memiliki tagihan rata-rata lebih besar dibandingkan female. Namun female memiliki maksimal tagihan yang lebih besar."""

# Menghitung region dan distribusi peluang nya
region_count = insuran.groupby(['region'])['charges'].agg(['count','mean','max']).sort_values('mean', ascending=False)
region_count['peluang'] = region_count['count'] / region_count['count'].sum()
region_count

"""Distribusi peluang tagihan tertinggi berada pada region southeast sebesar 0.2720 yang mana memiliki jumlah customer claim tertinggi juga."""

#insuran.groupby([ 'region'])['charges'].agg(['count','mean','max']).sort_values('mean', ascending=False)

sns.boxplot(x="region", y="charges", data=insuran, palette="Set3")
plt.title('Distribusi Peluang Besar Tagihan di Tiap-tiap Region')
plt.xlabel('Region')
plt.ylabel('Charges')
plt.show()

# Persebaran Cost Asuransi Berdasarkan Region
grouped_data = insuran.groupby('region')['charges'].agg(['mean']).sort_values(by='mean', ascending=False)
sns.set_style("white")  # menambahkan grid=False
plt.figure(figsize=(8,6))
chart = sns.barplot(x=grouped_data.index, y=grouped_data['mean'], palette="Blues_d")
chart.set_xticklabels(chart.get_xticklabels(), rotation=45, horizontalalignment='right')
plt.title('Persebaran Cost Asuransi Berdasarkan Region')
plt.xlabel('Region')
plt.ylabel('Average Charges')
plt.show()

# Menghitung jumlah perokok dan non-perokok
smoker_count = insuran['smoker'].value_counts()

# Menampilkan proporsi perokok dan non-perokok
print("Proporsi perokok: ", round((smoker_count['yes']/len(insuran))*1, 4))
print("Proporsi non-perokok: ", round((smoker_count['no']/len(insuran))*1, 4))

# Membuat subset data untuk perokok saja
smokers = insuran[insuran['smoker'] == 'yes']

# Menghitung jumlah perokok per jenis kelamin
smoker_gender = smokers['sex'].value_counts()

# Menghitung jumlah perokok per jenis kelamin wanita
female_smokers = smoker_gender['female']
male_smokers = smoker_gender['male']

# Menghitung peluang seseorang adalah perempuan diketahui dia adalah perokok
peluang_female = female_smokers / smokers.shape[0]
peluang_male = male_smokers / smokers.shape[0]

print(f"Peluang seseorang adalah female diketahui dia adalah perokok: {peluang_female:.2f}")
print(f"Peluang seseorang adalah male diketahui dia adalah perokok: {peluang_male:.2f}")

"""**Ringkasan**
- Secara umum Male yang memiliki tagihan rata-rata lebih besar dibandingkan female. Namun female memiliki maksimal tagihan yang lebih besar
- Jumlah klaim dari pelanggan yang tinggal di rgion southwest lebih banyak dibandingkan dengan wilayah lain, yaitu sebesar 0,27
- Proporsi perokok:  0.2048 dan Proporsi non-perokok:  0.7952
- Peluang seseorang male diketahui dia adalah perokok lebih tinggi dibandingkan female yaitu sebesar 0.58 sedngkan female diketahui dia adalah perokok: 0.42

## Variable Continue Analyst

1. Mana yang lebih mungkin terjadi
- a. Seseorang dengan BMI diatas 25 mendapatkan tagihan kesehatan diatas 16.7k,
atau
- b. Seseorang dengan BMI dibawah 25 mendapatkan tagihan kesehatan diatas 16.7k
"""

insuran.loc[insuran['bmi'] <= 25].groupby(['smoker'])['charges'].agg(['count', 'mean','min', 'max'])

insuran.loc[insuran['bmi'] > 25].groupby(['smoker'])['charges'].agg(['count', 'mean', 'min', 'max'])

# Tagihan di atas 16.7K berdasarkan BMI
tagihan_bmi = insuran[insuran['charges']>16700]
tagihan_bmi['bmi_group'] = tagihan_bmi['bmi'].transform(lambda x : 'BMI > 25' if x > 25 else 'BMI < = 25')
tagihan_bmi = tagihan_bmi.groupby('bmi_group', axis=0)['age'].aggregate(['count'])
tagihan_bmi['peluang'] = tagihan_bmi.transform(lambda x: x/x.sum())
tagihan_bmi

"""2. Mana yang lebih mungkin terjadi
- a. Seseorang perokok dengan BMI diatas 25 mendapatkan tagihan kesehatan
diatas 16.7k, atau
- b. Seseorang non perokok dengan BMI diatas 25 mendapatkan tagihan kesehatan
diatas 16.7k
"""

# Tagihan di atas 16.7K berdasarkan BMI > 25 dan smoker
tagihan_bmi = df[(df['bmi']>25) & (df['charges']>16700)]
tagihan_bmi['status'] = tagihan_bmi['smoker'].transform(lambda x : 'smoker' if x == 'yes' else 'non smoker')
tagihan_bmi = tagihan_bmi.groupby('status', axis=0)['age'].aggregate(['count'])
tagihan_bmi['peluang'] = tagihan_bmi.transform(lambda x: x/x.sum())
tagihan_bmi

# Create a subset of smokers with BMI > 25
smokers_bmi_above25 = insuran[(insuran['smoker'] == 'yes') & (insuran['bmi'] > 25)]

# Calculate the proportion of smokers with BMI > 25 who have health bill > 16.7k
p_smokers_bmi_above25 = (smokers_bmi_above25['charges'] > 16.7).mean()

# Create a subset of non-smokers with BMI > 25
non_smokers_bmi_above25 = insuran[(insuran['smoker'] == 'no') & (insuran['bmi'] > 25)]

# Calculate the proportion of non-smokers with BMI > 25 who have health bill > 16.7k
p_non_smokers_bmi_above25 = (non_smokers_bmi_above25['charges'] > 16.7).mean()

# Print the results
if p_smokers_bmi_above25 > p_non_smokers_bmi_above25:
    print("A smoker with a BMI above 25 getting a health bill above 16.7k is more likely.")
else:
    print("A non-smoker with a BMI above 25 getting a health bill above 16.7k is more likely.")

"""## Corelation Variable"""

plt.figure(figsize=(15,5))
sns.heatmap(insuran.corr(numeric_only=True),annot=True ,cmap="YlGn" )
plt.show()

"""Pada heatmap korelasi di atas menunjukkan korelasi antara charges dengan age, bmi, dan children. Kemudian dapat simpulkan sebagai berikut:

- age memiliki positif dan tertinggi terhadap charges yaitu 0.3
- bmi memiliki positif dan tertinggi terhadap charges yaitu 0.2
- children memiliki positif dan tertinggi terhadap charges yaitu 0.068

## Hypotesis Test

**Hypotesis: Tagihan kesehatan perokok lebih tinggi daripada tagihan kesehatan non perokok**
"""

import numpy as np
from scipy.stats import ttest_ind

# Menentukan nilai alpha (signifikansi)
alpha = 0.05
H0 = "Tagihan kesehatan pengguna yang merokok = tagihan kesehatan pengguna yang tidak merokok"
H1 = "Tagihan kesehatan pengguna yang merokok lebih tinggi dari pengguna yang tidak merokok"

#setup data untuk masing-masing kategori
smokers = insuran[insuran['smoker'] == 'yes'] 
non_smokers = insuran[insuran['smoker'] == 'no'] 

smokers_charges = smokers['charges']
non_smokers_charges = non_smokers['charges']

# Menghitung nilai variance
smokers_charges_var = np.var(smokers_charges)
non_smokers_charges_var = np.var(non_smokers_charges)

print('Variansi biaya pengguna perokok ', smokers_charges_var)
print('Variansi biaya pengguna non perokok ', non_smokers_charges_var)

# Uji statatistik menggunakan t test

t_stats, p_value = ttest_ind(smokers_charges, non_smokers_charges, equal_var=False, alternative='two-sided')
print(f't_stats: {t_stats}')
print(f'p_value: {p_value}')

# Pengambilan Keputusan
if p_value > alpha:
    print("HO diterima :", H0) 
else:
    print("HO ditolak : ", H1)

"""Karena p_value lebih besar daripada alpha, maka tolak H0. Dalam artian: Rata-rata biaya pengguna perokok tidak sama dengan rata-rata biaya pengguna non perokok, sehingga dapat dikatakan bahwa biaya pengguna perokok memang lebih besar daripada pengguna non perokok.

**Hypothesis : Proporsi perokok laki laki lebih besar dari perokok perempuan**
"""

# Menentukan nilai alpha (signifikansi)
alpha = 0.05
H0 = "Proporsi perokok laki laki = Proporsi perokok perempuan"
H1 = "Proporsi perokok laki laki lebih besar dari perempuan"


# Menghitung jumlah perokok per jenis kelamin
male_smoker = insuran[(insuran['sex'] == 'male') & (insuran['smoker'] == 'yes')]['smoker'].count()

female_smoker = insuran[(insuran['sex'] == 'female') & (insuran['smoker'] == 'yes')]['smoker'].count()

jumlah_male = insuran[insuran['sex'] == 'male']['sex'].count()

jumlah_female = insuran[insuran['sex'] == 'female']['sex'].count()


# Uji statistik menggunakan z test

from statsmodels.stats.proportion import proportions_ztest

z_stat, pval = proportions_ztest([female_smokers, male_smokers], [jumlah_female, jumlah_male], alternative='two-sided')
print(f'z statistic: {z_stat}')
print(f'p_value: {pval}')

# Pengambilan Keputusan
if p_value > alpha:
    print("HO diterima :", H0) 
else:
    print("HO ditolak : ", H1)

"""Karena p_value lebih besar daripada alpha, maka tolak H0. Dalam artian: Jumlah Proporsi perokok laki laki lebih besar dari perempuan

**Tagihan kesehatan laki-laki lebih besar dari perempuan**
"""

# Menentukan nilai alpha (signifikansi)
alpha = 0.05
H0 = "Tagihan kesehatan laki-laki = Tagihan kesehatan perempuan"
H1 = "Tagihan kesehatan laki-laki lebih besar dari perempuan"


# Menghitung jumlah perokok per jenis kelamin
#setup data untuk masing-masing kategori
gender_male = insuran[insuran['sex'] == 'male'] 
gender_female = insuran[insuran['sex'] == 'female'] 

male_charges = gender_male['charges']
female_charges = gender_female['charges']



# Uji statatistik menggunakan t test

t_stats, p_value = ttest_ind(male_charges, female_charges, equal_var=False, alternative='two-sided')
print(f't_stats: {t_stats}')
print(f'p_value: {p_value}')

# Pengambilan Keputusan
if p_value > alpha:
    print("HO diterima :", H0) 
else:
    print("HO ditolak : ", H1)

"""Karena p_value lebih besar daripada alpha, maka tolak H0. Dalam artian: Rata-rata biaya tagihan kesehatan laki-laki tidak sama dengan rata-rata biaya tagihan kesehatan perempuan, sehingga dapat dikatakan bahwa iaya tagihan kesehatan laki-laki memang lebih besar daripada piaya tagihan kesehatan perempuan."""